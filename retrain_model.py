# retrain_model.py
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏
"""

import os
import sys
sys.path.insert(0, os.path.dirname(__file__))

from model.simple_nn.trainer import SimpleTrainer
from model.data_loader import load_dataset

def retrain_model():
    """–ü–æ–ª–Ω–æ–µ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏"""
    print("üîÑ –ü–æ–ª–Ω–æ–µ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏...")
    
    groups = load_dataset()
    if not groups:
        print("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è")
        return
    
    print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(groups)} –≥—Ä—É–ø–ø")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –º–æ–¥–µ–ª—å –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è
    model_path = "data/simple_model.pth"
    if os.path.exists(model_path):
        os.remove(model_path)
        print("üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –º–æ–¥–µ–ª—å")
    
    # –û–±—É—á–∞–µ–º —Å –Ω—É–ª—è
    trainer = SimpleTrainer(model_path)
    trainer.train(groups, epochs=15, batch_size=64)
    
    print("‚úÖ –ü–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    retrain_model()