# [file name]: run.py (–£–ü–†–û–©–ï–ù–ù–´–ô)
#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π –∑–∞–ø—É—Å–∫–∞—é—â–∏–π —Ñ–∞–π–ª –¥–ª—è –£–°–ò–õ–ï–ù–ù–û–ô –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ —Å –∞–Ω—Å–∞–º–±–ª–µ–≤—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
–ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ systemd —Å–µ—Ä–≤–∏—Å
"""

import os
import sys
import time
import logging
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è systemd
log_dir = "/var/log"
log_file = os.path.join(log_dir, "sequence-predictor.log")

try:
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–∏—Å–∞—Ç—å –≤ /var/log, –µ—Å–ª–∏ –Ω–µ—Ç –ø—Ä–∞–≤ - –ø–∏—à–µ–º –≤ —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if not os.access(log_dir, os.W_OK):
        log_file = "sequence-predictor.log"
        print(f"‚ö†Ô∏è  –ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ {log_dir}, –ª–æ–≥–∏ –≤: {log_file}")
except:
    log_file = "sequence-predictor.log"

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler(sys.stdout),
        logging.FileHandler(log_file)
    ]
)
logger = logging.getLogger('SequencePredictor')

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
current_dir = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, current_dir)

def main():
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ –£–°–ò–õ–ï–ù–ù–û–ô –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —á–∏—Å–µ–ª...")
        logger.info("   –¢–µ–ø–µ—Ä—å —Å –∞–Ω—Å–∞–º–±–ª–µ–≤—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏, —Å–∞–º–æ–æ–±—É—á–µ–Ω–∏–µ–º –∏ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é! üéØ")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        data_dir = os.path.join(current_dir, 'data')
        os.makedirs(data_dir, exist_ok=True)
        logger.info(f"‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã: {data_dir}")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –Ω–∞–ø—Ä—è–º—É—é (–∏–∑–±–µ–≥–∞–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤)
        sys.path.insert(0, os.path.join(current_dir, 'model'))
        from simple_system import SimpleNeuralSystem
        from cli import main_menu
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É
        system = SimpleNeuralSystem()
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        logger.info("‚úÖ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é")
        main_menu()
        
    except KeyboardInterrupt:
        logger.info("‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        sys.exit(0)
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}", exc_info=True)
        sys.exit(1)

if __name__ == "__main__":
    main()